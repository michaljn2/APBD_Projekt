@page "/watchlist"
@inject HttpClient httpClient
@using BlazorApp1.Shared
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@attribute [Microsoft.AspNetCore.Authorization.Authorize]
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Buttons
@inject IJSRuntime js



<SfGrid @ref="Grid" DataSource="@Companies" AllowPaging="true" AllowSorting="true">
 <GridPageSettings PageSize="5"></GridPageSettings>
   <GridColumns>
       <GridColumn HeaderText="Logo" TextAlign="TextAlign.Center" Width="100"> 
            <Template> 
                @{
                    var company = (context as CompanyDetails);
                    if(company.Logo == "No logo provided")
                    {
                        <div>
                            <h4>No logo provided</h4>
                        </div>
                    }
                    else{
                        <div class="image"> 
                            <img src="@(company.Logo)?apiKey=EXZsCpZ0MQv2fO03mMbNnSE0xnWDawTp" alt="@(company.Logo) Logo" /> 
                        </div> 
                    }
                } 
            </Template> 
        </GridColumn> 
     <GridColumn Field=@nameof(CompanyDetails.IdCompany) HeaderText="Ticker" TextAlign="TextAlign.Left" Width="30"></GridColumn>
     <GridColumn Field=@nameof(CompanyDetails.Name) HeaderText="Name" Width="100"></GridColumn>
     <GridColumn Field=@nameof(CompanyDetails.City) HeaderText="City" TextAlign="TextAlign.Left" Width="50"></GridColumn>
     <GridColumn Field=@nameof(CompanyDetails.Description) HeaderText="Description" Format="C2" TextAlign="TextAlign.Left" Width="120"></GridColumn>
     <GridColumn HeaderText="Options" TextAlign="TextAlign.Center" Width="60">
         <Template>
              @{ 
                  var company = (context as CompanyDetails); 
                  <button type="button" class="btn btn-primary" @onclick="((args)=> DeleteCompanyFromWatchList(args,company))">Delete</button>
              } 
         </Template>
     </GridColumn>
   </GridColumns>
</SfGrid>



@code{
    private List<CompanyDetails> Companies { get; set; }
    private SfGrid<CompanyDetails> Grid;

    protected override async Task OnInitializedAsync()
    {
        Companies = new List<CompanyDetails>();

        try
        {
            Companies = await httpClient.GetFromJsonAsync<List<CompanyDetails>>("api/users/watchlist");
        } catch(AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
    private async Task DeleteCompanyFromWatchList(Microsoft.AspNetCore.Components.Web.MouseEventArgs args, CompanyDetails company) 
    {
        var result = await js.InvokeAsync<bool>("confirm", "Are You sure?");
        if (result)
        {
            var comp = Companies.SingleOrDefault(e => e.IdCompany == company.IdCompany);
        Companies.Remove(comp);
        await Grid.Refresh();
        HttpResponseMessage response = await httpClient.DeleteAsync("api/users/watchlist/" + company.IdCompany);
        }
    } 
}
